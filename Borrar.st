Object subclass: #Prueba	instanceVariableNames: 'nada1'	classVariableNames: ''	poolDictionaries: ''	category: 'Borrar'!!Prueba commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	prueba1:		<Object>    Implementation Points!!Prueba methodsFor: 'inicializador' stamp: 'FedericoGonzalez 6/3/2018 20:49'!inicializar:unaPrueba"jdslka"nada1:=unaPrueba.! !!Prueba methodsFor: 'vizualizadores' stamp: 'FedericoGonzalez 6/3/2018 20:49'!getPrueba^nada1! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Prueba class	instanceVariableNames: ''!!Prueba class methodsFor: 'constructor' stamp: 'FedericoGonzalez 6/3/2018 20:42'!crearPrueba:unaPrueba"jdiosa"|unaPrub|unaPrub := self new.unaPrub inicializar: unaPrueba.^unaPrub ! !Prueba subclass: #Nada	instanceVariableNames: 'nada2'	classVariableNames: ''	poolDictionaries: ''	category: 'Borrar'!!Nada commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!Nada methodsFor: 'inicializador' stamp: 'FedericoGonzalez 6/3/2018 20:43'!inicializarNada:unNadanada1 := unNada.self inicializar: unNada.! !!Nada methodsFor: 'inicializador' stamp: 'FedericoGonzalez 6/3/2018 20:44'!inicializarNada:unNada dos: unNada2self inicializar: unNada.nada2 :=unNada2.! !!Nada methodsFor: 'visualizadores' stamp: 'FedericoGonzalez 6/3/2018 20:46'!getNada1^nada1! !!Nada methodsFor: 'visualizadores' stamp: 'FedericoGonzalez 6/3/2018 20:46'!getNada2^nada2! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Nada class	instanceVariableNames: ''!!Nada class methodsFor: 'constructor' stamp: 'FedericoGonzalez 6/3/2018 20:45'!crearNada: unNada dos:unNada2|nadita|nadita := self new.nadita inicializarNada: unNada dos:unNada2.^nadita! !!Nada class methodsFor: 'constructor' stamp: 'FedericoGonzalez 6/3/2018 17:11'!crearNada: unNada|nadita|nadita := self new.nadita inicializarNada: unNada.^nadita! !